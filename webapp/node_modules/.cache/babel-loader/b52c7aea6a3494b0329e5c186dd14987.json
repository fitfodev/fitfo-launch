{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport const useOnLoadImages = ref => {\n  _s();\n\n  const [status, setStatus] = useState(false);\n  useEffect(() => {\n    const updateStatus = images => {\n      setStatus(images.map(image => image.complete).every(item => item === true));\n    };\n\n    if (!ref.current) return;\n    const imagesLoaded = Array.from(ref.current.querySelectorAll(\"img\"));\n\n    if (imagesLoaded.length === 0) {\n      setStatus(true);\n      return;\n    }\n\n    imagesLoaded.forEach(image => {\n      image.addEventListener(\"load\", () => updateStatus(imagesLoaded), {\n        once: true\n      });\n      image.addEventListener(\"error\", () => updateStatus(imagesLoaded), {\n        once: true\n      });\n    });\n    return;\n  }, [ref]);\n  return status;\n};\n\n_s(useOnLoadImages, \"iW7PMEIJc8b9DQPigLoTVxHyUqc=\");","map":{"version":3,"sources":["/Users/orlandokenny/Desktop/websites/themellowyellow.net/webapp/src/hooks/useOnLoadImages.tsx"],"names":["useState","useEffect","useOnLoadImages","ref","status","setStatus","updateStatus","images","map","image","complete","every","item","current","imagesLoaded","Array","from","querySelectorAll","length","forEach","addEventListener","once"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAA+C,OAA/C;AAEA,OAAO,MAAMC,eAAe,GAAIC,GAAD,IAAiC;AAAA;;AAC9D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,YAAY,GAAIC,MAAD,IAAgC;AACnDF,MAAAA,SAAS,CACPE,MAAM,CAACC,GAAP,CAAYC,KAAD,IAAWA,KAAK,CAACC,QAA5B,EAAsCC,KAAtC,CAA6CC,IAAD,IAAUA,IAAI,KAAK,IAA/D,CADO,CAAT;AAGD,KAJD;;AAMA,QAAI,CAACT,GAAG,CAACU,OAAT,EAAkB;AAElB,UAAMC,YAAY,GAAGC,KAAK,CAACC,IAAN,CAAWb,GAAG,CAACU,OAAJ,CAAYI,gBAAZ,CAA6B,KAA7B,CAAX,CAArB;;AAEA,QAAIH,YAAY,CAACI,MAAb,KAAwB,CAA5B,EAA+B;AAC7Bb,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA;AACD;;AAEDS,IAAAA,YAAY,CAACK,OAAb,CAAsBV,KAAD,IAAW;AAC9BA,MAAAA,KAAK,CAACW,gBAAN,CAAuB,MAAvB,EAA+B,MAAMd,YAAY,CAACQ,YAAD,CAAjD,EAAiE;AAC/DO,QAAAA,IAAI,EAAE;AADyD,OAAjE;AAGAZ,MAAAA,KAAK,CAACW,gBAAN,CAAuB,OAAvB,EAAgC,MAAMd,YAAY,CAACQ,YAAD,CAAlD,EAAkE;AAChEO,QAAAA,IAAI,EAAE;AAD0D,OAAlE;AAGD,KAPD;AASA;AACD,GA1BQ,EA0BN,CAAClB,GAAD,CA1BM,CAAT;AA4BA,SAAOC,MAAP;AACD,CAhCM;;GAAMF,e","sourcesContent":["import { useState, useEffect, RefObject } from \"react\";\n\nexport const useOnLoadImages = (ref: RefObject<HTMLElement>) => {\n  const [status, setStatus] = useState(false);\n\n  useEffect(() => {\n    const updateStatus = (images: HTMLImageElement[]) => {\n      setStatus(\n        images.map((image) => image.complete).every((item) => item === true)\n      );\n    };\n\n    if (!ref.current) return;\n\n    const imagesLoaded = Array.from(ref.current.querySelectorAll(\"img\"));\n\n    if (imagesLoaded.length === 0) {\n      setStatus(true);\n      return;\n    }\n\n    imagesLoaded.forEach((image) => {\n      image.addEventListener(\"load\", () => updateStatus(imagesLoaded), {\n        once: true\n      });\n      image.addEventListener(\"error\", () => updateStatus(imagesLoaded), {\n        once: true\n      });\n    });\n\n    return;\n  }, [ref]);\n\n  return status;\n};\n"]},"metadata":{},"sourceType":"module"}